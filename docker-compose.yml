version: '3.7'
networks:
  default:
    driver: overlay
    driver_opts:
      encrypted: ""
services:
  db:
    image: mariadb:11.2.2-jammy
    deploy:
      resources:
        reservations:
          memory: 200M
      placement:
        constraints: [node.labels.db == true]
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
    configs:
      - source: mysql-config
        target: /etc/mysql/conf.d/mysql-config-healthdata.cnf
    secrets:
      - source: mysql_root_password
        target: /run/secrets/mysql_root_password
      - source: storage_key
        target: /etc/mysql/encryption/keyfile
      - source: mysql_ca
        target: /etc/my.cnf.d/certificates/ca.pem
    volumes:
      - mysql-data:/var/lib/mysql
      - letsencrypt_conf:/etc/letsencrypt:ro # mounting the folder to the nginx container
    ports:
      - 3306:3306
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image:
      jhaiduce/healthdata
    deploy:
      replicas: 2
      resources:
        reservations:
          memory: 200M
    secrets:
      - source: pyramid_main_ini
        target: /run/secrets/production.ini
    links:
      - db
  nginx:
    image: nginx
    deploy:
      resources:
        reservations:
          memory: 100M
      placement:
        constraints: [node.labels.db == true]
    environment:
      - DOMAIN
    ports:
      - 80:80
      - 443:443
    configs:
      - source: nginx-conf-healthdata
        target: /etc/nginx/templates/healthdata.conf.template
      - source: nginx-conf-common
        target: /etc/nginx/common.conf
      - source: nginx-conf-common-location
        target: /etc/nginx/conf.d/common-location.conf
      - source: nginx-conf-ssl
        target: /etc/nginx/ssl.conf
      - source: nginx-conf-default
        target: /etc/nginx/conf.d/default.conf
      - source: letsencrypt-options-ssl-nginx
        target: /etc/nginx/letsencrypt/options-ssl-nginx.conf
    secrets:
      - source: ssl_certificate
        target: /etc/ssl/private/fullchain.pem
      - source: ssl_certificate_key
        target: /etc/ssl/private/privkey.pem
      - source: dhparams
        target: /etc/nginx/dhparams.pem
    volumes:
      - letsencrypt_conf:/etc/letsencrypt:ro # mounting the folder to the nginx container
      - certbot_webroot:/var/www/certbot:ro
    links:
      - web
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    deploy:
      restart_policy:
        condition: any
        delay: 12h
    depends_on:
      - nginx
    entrypoint: /bin/sh -c "apk add acl && certbot certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN}
             && chown root:${NGINX_UID} /etc/letsencrypt/live /etc/letsencrypt/archive; chmod 750 /etc/letsencrypt/live /etc/letsencrypt/archive && chown root:${NGINX_UID} /etc/letsencrypt/archive/${DOMAIN}/privkey*.pem && chmod 640 /etc/letsencrypt/archive/${DOMAIN}/privkey*.pem && setfacl -m g:999:r-- /etc/letsencrypt/archive/${DOMAIN}/privkey*.pem && setfacl -m g:999:r-x /etc/letsencrypt/live /etc/letsencrypt/archive"
    volumes:
      - letsencrypt_conf:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
volumes:
  mysql-data:
  letsencrypt_conf: {}
  certbot_webroot: {}

secrets:
  storage_key:
    name: storage_key.1
    file: ./secrets/storage_key.keyfile
  mysql_root_password:
    name: mysql_root_password.1
    file: ./secrets/db_root_pw
  mysql_production_password:
    name: mysql_production_password
    file: ./secrets/db_app_pw
  pyramid_auth_secret:
    name: pyramid_auth_secret.1
    file: ./secrets/pyramid_auth_secret
  app_admin_password:
    name: app_admin_password.2
    file: ./secrets/app_admin_pw
  pyramid_main_ini:
    name: production.ini.2
    file: ./secrets/production.ini
  mysql_ca:
    name: mysql_ca.${SSL_CHECKSUM}
    file: ./nginx/ssl/isrgrootx1.pem
  dhparams:
    file: ./secrets/dhparams.pem
  ssl_certificate:
    name: ssl_certificate.${SSL_CHECKSUM}
    file: ./nginx/ssl/fullchain.pem
  ssl_certificate_key:
    name: ssl_certificate_key.${SSL_CHECKSUM}
    file: ./nginx/ssl/privkey.pem
configs:
  mysql-config:
    name: mysql-config.2
    file: ./mysql-config-healthdata.cnf
  nginx-conf-healthdata:
    name: nginx-conf-healthdata.8
    file: ./nginx/healthdata.conf
  nginx-conf-common:
    file: ./nginx/common.conf
  nginx-conf-common-location:
    file: ./nginx/common_location.conf
  nginx-conf-ssl:
    file: nginx/ssl.conf
  nginx-conf-default:
    file: nginx/default.conf
  letsencrypt-options-ssl-nginx:
    file: etc/letsencrypt/options-ssl-nginx.conf
