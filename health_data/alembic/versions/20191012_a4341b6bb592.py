"""Added record, person, and security tables

Revision ID: a4341b6bb592
Revises: fe173664d998
Create Date: 2019-10-12 08:36:20.490228

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a4341b6bb592'
down_revision = 'fe173664d998'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('symptomtype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_symptomtype'))
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('pwhash', sa.String(length=255), nullable=True),
    sa.Column('pw_timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('name', name=op.f('uq_user_name')),
    mysql_encrypted='yes'
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('fk_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fk_user_id'], ['user.id'], name=op.f('fk_person_fk_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_person'))
    )
    op.create_table('record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('modified_date', sa.DateTime(), nullable=True),
    sa.Column('person', sa.Integer(), nullable=True),
    sa.Column('record_type', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['person'], ['user.id'], name='fk_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_record'))
    )
    op.create_table('note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['record.id'], name=op.f('fk_note_id_record')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_note'))
    )
    op.create_table('period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('intensity', sa.Float(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['record.id'], name=op.f('fk_period_id_record')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_period'))
    )
    op.create_table('symptom',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symptomtype_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['record.id'], name=op.f('fk_symptom_id_record')),
    sa.ForeignKeyConstraint(['symptomtype_id'], ['symptomtype.id'], name='fk_symtomtype_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_symptom'))
    )
    op.create_table('temperature',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('utcoffset', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['record.id'], name=op.f('fk_temperature_id_record')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_temperature'))
    )
    op.create_table('weight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('utcoffset', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['record.id'], name=op.f('fk_weight_id_record')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weight'))
    )
    op.drop_index('my_index', table_name='models')
    op.drop_table('models')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('models',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('value', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_models')
    )
    op.create_index('my_index', 'models', ['name'], unique=1)
    op.drop_table('weight')
    op.drop_table('temperature')
    op.drop_table('symptom')
    op.drop_table('period')
    op.drop_table('note')
    op.drop_table('record')
    op.drop_table('person')
    op.drop_table('user')
    op.drop_table('symptomtype')
    # ### end Alembic commands ###
